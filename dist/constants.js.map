{"version":3,"sources":["../src/constants.js"],"names":["AUTO","regions","namespaces","aggregations","windows","resolutions","environments","compartmentsQueryRegex","regionsQueryRegex","namespacesQueryRegex","resourcegroupsQueryRegex","metricsQueryRegex","dimensionKeysQueryRegex","dimensionValuesQueryRegex","windowsAndResolutionRegex","removeQuotes","str","res","startsWith","slice","endsWith","length","SEVEN_DAYS","THIRTY_DAYS","NINETY_DAYS","d0To7Config","window","resolution","d8To30Config","d31toInfConfig","autoTimeIntervals"],"mappings":";;;;;;;;;4BAIaA,I,GAAO,M;;;;+BACPC,O,GAAU,CAAC,gBAAD,EAAkB,gBAAlB,EAAmC,gBAAnC,EAAoD,aAApD,EAAkE,YAAlE,EAA+E,YAA/E,EAA4F,aAA5F,EAA0G,YAA1G,EAAuH,eAAvH,EAAuI,cAAvI,EAAsJ,gBAAtJ,EAAuK,gBAAvK,EAAwL,aAAxL,EAAsM,aAAtM,EAAoN,eAApN,EAAoO,aAApO,EAAkP,cAAlP,EAAiQ,cAAjQ,C;;;;kCACVC,U,GAAa,CAAC,kBAAD,EAAqB,gBAArB,EAAuC,WAAvC,EAAoD,eAApD,C;;;;oCACbC,Y,GAAe,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,QAAxC,EAAkD,OAAlD,EAA2D,iBAA3D,EAA8E,iBAA9E,EAAiG,iBAAjG,C;;;;+BACfC,O,GAAU,CAACJ,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,C;;;;mCACVK,W,GAAc,CAACL,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,C;;;;oCACdM,Y,GAAe,CAAC,OAAD,EAAU,cAAV,C;;;;8CAGfC,sB,GAAyB,sB;;;;yCACzBC,iB,GAAoB,iB;;;;4CACpBC,oB,GAAuB,wE;;;;gDACvBC,wB,GAA2B,wG;;;;yCAC3BC,iB,GAAoB,6H;;;;+CACpBC,uB,GAA0B,4J;;;;iDAC1BC,yB,GAA4B,8L;;;;iDAC5BC,yB,GAA4B,e;;;;oCAE5BC,Y,GAAe,SAAfA,YAAe,MAAO;AAC/B,oBAAI,CAACC,GAAL,EAAU,OAAOA,GAAP;;AAEV,oBAAIC,MAAMD,GAAV;AACA,oBAAIA,IAAIE,UAAJ,CAAe,GAAf,KAAuBF,IAAIE,UAAJ,CAAe,GAAf,CAA3B,EAAgD;AAC5CD,0BAAMA,IAAIE,KAAJ,CAAU,CAAV,CAAN;AACH;AACD,oBAAIH,IAAII,QAAJ,CAAa,GAAb,KAAqBJ,IAAII,QAAJ,CAAa,GAAb,CAAzB,EAA4C;AACxCH,0BAAMA,IAAIE,KAAJ,CAAU,CAAV,EAAaF,IAAII,MAAJ,GAAa,CAA1B,CAAN;AACH;AACD,uBAAOJ,GAAP;AACH,a;;;;kCAQYK,U,GAAa,C;;;;mCACbC,W,GAAc,E;;;;mCACdC,W,GAAc,E;;;;mCAEdC,W,GAAc,EAAEC,QAAQ,IAAV,EAAgBC,YAAY,IAA5B,E;;;;oCACdC,Y,GAAe,EAAEF,QAAQ,IAAV,EAAgBC,YAAY,IAA5B,E;;;;sCACfE,c,GAAiB,EAAEH,QAAQ,IAAV,EAAgBC,YAAY,IAA5B,E;;;;yCAEjBG,iB,GAAoB,CAC/B,CAACR,UAAD,EAAaG,WAAb,CAD+B,EAE/B,CAACF,WAAD,EAAcK,YAAd,CAF+B,EAG/B,CAACJ,WAAD,EAAcK,cAAd,CAH+B,C","file":"constants.js","sourcesContent":["/*\n** Copyright Â© 2019 Oracle and/or its affiliates. All rights reserved.\n** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n*/\nexport const AUTO = 'auto'\nexport const regions = ['ap-chuncheon-1','ap-hyderabad-1','ap-melbourne-1','ap-mumbai-1','ap-osaka-1','ap-seoul-1','ap-sydney-1','ap-tokyo-1','ca-montreal-1','ca-toronto-1','eu-amsterdam-1','eu-frankfurt-1','eu-zurich-1','me-jeddah-1','sa-saopaulo-1','uk-london-1','us-ashburn-1','us-phoenix-1']\nexport const namespaces = ['oci_computeagent', 'oci_blockstore', 'oci_lbaas', 'oci_telemetry']\nexport const aggregations = ['count()', 'max()', 'mean()', 'min()', 'rate()', 'sum()', 'percentile(.90)', 'percentile(.95)', 'percentile(.99)']\nexport const windows = [AUTO, '1m', '5m', '1h']\nexport const resolutions = [AUTO, '1m', '5m', '1h']\nexport const environments = ['local', 'OCI Instance']\n\n\nexport const compartmentsQueryRegex = /^compartments\\(\\)\\s*/;\nexport const regionsQueryRegex = /^regions\\(\\)\\s*/;\nexport const namespacesQueryRegex = /^namespaces\\(\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*\\)/;\nexport const resourcegroupsQueryRegex = /^resourcegroups\\(\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*\\)/;\nexport const metricsQueryRegex = /^metrics\\(\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*\\)/;\nexport const dimensionKeysQueryRegex = /^dimensions\\(\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*\\)/;\nexport const dimensionValuesQueryRegex = /^dimensionOptions\\(\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*,\\s*(\\\".+\\\"|\\'.+\\'|\\$\\w+)\\s*\\)/;\nexport const windowsAndResolutionRegex = /^[0-9]+[mhs]$/;\n\nexport const removeQuotes = str => {\n    if (!str) return str;\n\n    let res = str;\n    if (str.startsWith(\"'\") || str.startsWith('\"')) {\n        res = res.slice(1);\n    }\n    if (str.endsWith(\"'\") || str.endsWith('\"')) {\n        res = res.slice(0, res.length - 1);\n    }\n    return res;\n}\n\n// if the user selects a time range less than 7 days ->  window will be 1m and resolution will be 1 min\n//\n// if the user selects a time range less than 30 days and more than 7 days ->   window will be 5m and resolution will be 5 min.\n//\n//   if the user select time range less than 90 days and more than 30 days -> a window will be 1h and resolution will be 1 h\n\nexport const SEVEN_DAYS = 7\nexport const THIRTY_DAYS = 30\nexport const NINETY_DAYS = 90\n\nexport const d0To7Config = { window: '1m', resolution: '1m' }\nexport const d8To30Config = { window: '5m', resolution: '5m' }\nexport const d31toInfConfig = { window: '1h', resolution: '1h' }\n\nexport const autoTimeIntervals = [\n  [SEVEN_DAYS, d0To7Config],\n  [THIRTY_DAYS, d8To30Config],\n  [NINETY_DAYS, d31toInfConfig]\n]\n"]}