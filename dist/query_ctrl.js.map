{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","windows","namespacesQueryRegex","resourcegroupsQueryRegex","metricsQueryRegex","regionsQueryRegex","compartmentsQueryRegex","dimensionKeysQueryRegex","dimensionValuesQueryRegex","windowsAndResolutionRegex","resolutions","AUTO","SELECT_PLACEHOLDERS","DIMENSION_KEY","DIMENSION_VALUE","COMPARTMENT","REGION","NAMESPACE","RESOURCEGROUP","METRIC","WINDOW","OCIDatasourceQueryCtrl","$scope","$injector","$q","uiSegmentSrv","q","target","region","compartment","namespace","resourcegroup","metric","resolution","window","aggregation","dimensions","dimensionSegments","removeDimensionSegment","newSegment","fake","value","getSelectDimensionKeySegment","type","getDimensionOperatorSegment","newOperator","getSelectDimensionValueSegment","dimensionsCache","i","length","dim","push","newCondition","key","operator","newPlusButton","datasource","getRegions","then","appendVariables","regions","getCompartments","compartments","getNamespaces","namespaces","getResourceGroups","resourcegroups","metricFindQuery","metrics","getAggregations","aggs","map","val","text","appendWindowsAndResolutionVariables","segment","index","getDimensionsCache","keys","Object","cache","vars","getVariables","keysWithVariables","concat","segments","unshift","keySegment","getVariableValue","options","optionsWithVariables","v","when","targetSelector","JSON","stringify","getDimensions","reduce","data","item","values","split","varQeueryRegex","forEach","rawQuery","panelCtrl","refresh","splice","Math","max","cssClass","isVariable","indexOf","updateQueryWithDimensions","s","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["/*\n** Copyright © 2019 Oracle and/or its affiliates. All rights reserved.\n** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n*/\nimport { QueryCtrl } from 'app/plugins/sdk'\nimport './css/query-editor.css!'\nimport {\n  windows,\n  namespacesQueryRegex,\n  resourcegroupsQueryRegex,\n  metricsQueryRegex,\n  regionsQueryRegex,\n  compartmentsQueryRegex,\n  dimensionKeysQueryRegex,\n  dimensionValuesQueryRegex,\n  windowsAndResolutionRegex, resolutions, AUTO\n} from './constants'\n\nexport const SELECT_PLACEHOLDERS = {\n  DIMENSION_KEY: 'select dimension',\n  DIMENSION_VALUE: 'select value',\n  COMPARTMENT: 'select compartment',\n  REGION: 'select region',\n  NAMESPACE: 'select namespace',\n  RESOURCEGROUP: 'select resource group',\n  METRIC: 'select metric',\n  WINDOW: 'select window'\n}\n\nexport class OCIDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector, $q, uiSegmentSrv) {\n    super($scope, $injector)\n\n    this.q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.target.region = this.target.region || SELECT_PLACEHOLDERS.REGION;\n    this.target.compartment = this.target.compartment || SELECT_PLACEHOLDERS.COMPARTMENT;\n    this.target.namespace = this.target.namespace || SELECT_PLACEHOLDERS.NAMESPACE;\n    this.target.resourcegroup = this.target.resourcegroup || SELECT_PLACEHOLDERS.RESOURCEGROUP;\n    this.target.metric = this.target.metric || SELECT_PLACEHOLDERS.METRIC;\n    this.target.resolution = this.target.resolution || AUTO;\n    this.target.window = this.target.window || AUTO;\n    this.target.aggregation = this.target.aggregation || 'mean()'\n    this.target.dimensions = this.target.dimensions || [];\n\n    this.dimensionSegments = [];\n    this.removeDimensionSegment = uiSegmentSrv.newSegment({ fake: true, value: '-- remove dimension --' });\n    this.getSelectDimensionKeySegment = () => uiSegmentSrv.newSegment({ value: SELECT_PLACEHOLDERS.DIMENSION_KEY, type: 'key' });\n    this.getDimensionOperatorSegment = () => this.uiSegmentSrv.newOperator('=');\n    this.getSelectDimensionValueSegment = () => uiSegmentSrv.newSegment({ value: SELECT_PLACEHOLDERS.DIMENSION_VALUE, type: 'value' });\n\n    this.dimensionsCache = {};\n\n    // rebuild dimensionSegments on query editor load\n    for (let i = 0; i < this.target.dimensions.length; i++) {\n      const dim = this.target.dimensions[i];\n      if (i > 0) {\n        this.dimensionSegments.push(this.uiSegmentSrv.newCondition(','))\n      }\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.key, type: 'key' }));\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.operator, type: 'operator' }));\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.value, type: 'value' }));\n    }\n    this.dimensionSegments.push(this.uiSegmentSrv.newPlusButton())\n  }\n\n  // ****************************** Options **********************************\n\n  getRegions() {\n    return this.datasource.getRegions().then(regions => {\n      return this.appendVariables([ ...regions], regionsQueryRegex);\n    });\n  }\n\n  getCompartments() {\n    return this.datasource.getCompartments().then(compartments => {\n      return this.appendVariables([...compartments], compartmentsQueryRegex);\n    });\n  }\n\n  getNamespaces() {\n    return this.datasource.getNamespaces(this.target).then(namespaces => {\n      return this.appendVariables([...namespaces], namespacesQueryRegex);\n    });\n  }\n\n  getResourceGroups() {\n    return this.datasource.getResourceGroups(this.target).then(resourcegroups => {\n      return this.appendVariables([...resourcegroups], resourcegroupsQueryRegex);\n    });\n  }\n\n  getMetrics() {\n    return this.datasource.metricFindQuery(this.target).then(metrics => {\n      return this.appendVariables([...metrics], metricsQueryRegex);\n    });\n  }\n\n  getAggregations() {\n    return this.datasource.getAggregations().then(aggs => {\n      return aggs.map((val) => ({ text: val, value: val }));\n    });\n  }\n\n  getWindows () {\n    return this.appendWindowsAndResolutionVariables([...windows], windowsAndResolutionRegex)\n  }\n\n  getResolutions () {\n    return this.appendWindowsAndResolutionVariables([...resolutions], windowsAndResolutionRegex)\n  }\n\n  /**\n   * Get options for the dimension segment: of type 'key' or type 'value'\n   * @param segment \n   * @param index \n   */\n  getDimensionOptions(segment, index) {\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      return this.getDimensionsCache().then(cache => {\n        const keys = Object.keys(cache);\n        const vars = this.datasource.getVariables(dimensionKeysQueryRegex) || [];\n        const keysWithVariables = vars.concat(keys);\n        const segments = keysWithVariables.map(key => this.uiSegmentSrv.newSegment({ value: key }));\n        segments.unshift(this.removeDimensionSegment);\n        return segments;\n      });\n    }\n\n    if (segment.type === 'value') {\n      return this.getDimensionsCache().then(cache => {\n        const keySegment = this.dimensionSegments[index - 2];\n        const key = this.datasource.getVariableValue(keySegment.value);\n        const options = cache[key] || [];\n\n        // return all the values for the key\n        const vars = this.datasource.getVariables(dimensionValuesQueryRegex) || [];\n        const optionsWithVariables = vars.concat(options);\n        const segments = optionsWithVariables.map(v => this.uiSegmentSrv.newSegment({ value: v }));\n        return segments;\n      });\n    }\n\n    return this.q.when([]);\n  }\n\n  getDimensionsCache() {\n    const targetSelector = JSON.stringify({\n      region: this.datasource.getVariableValue(this.target.region),\n      compartment: this.datasource.getVariableValue(this.target.compartment),\n      namespace: this.datasource.getVariableValue(this.target.namespace),\n      resourcegroup: this.datasource.getVariableValue(this.target.resourcegroup),\n      metric: this.datasource.getVariableValue(this.target.metric)\n    });\n\n    if (this.dimensionsCache[targetSelector]) {\n      return this.q.when(this.dimensionsCache[targetSelector]);\n    }\n\n    return this.datasource.getDimensions(this.target).then(dimensions => {\n      const cache = dimensions.reduce((data, item) => {\n        const values = item.value.split('=') || [];\n        const key = values[0] || item.value;\n        const value = values[1];\n\n        if (!data[key]) {\n          data[key] = []\n        }\n        data[key].push(value);\n        return data;\n      }, {});\n      this.dimensionsCache[targetSelector] = cache;\n      return this.dimensionsCache[targetSelector];\n    })\n  }\n\n  appendVariables(options, varQeueryRegex) {\n    const vars = this.datasource.getVariables(varQeueryRegex) || [];\n    vars.forEach(value => {\n      options.unshift({ value, text: value });\n    });\n    return options;\n  }\n\n  appendWindowsAndResolutionVariables (options, varQeueryRegex) {\n    const vars = this.datasource.getVariables(varQeueryRegex) || []\n    return [...options, ...vars].map(value => ({ value, text: value }))\n  }\n  // ****************************** Callbacks **********************************\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  /**\n   * On dimension segment change callback\n   * @param segment \n   * @param index \n   */\n  onDimensionsChange(segment, index) {\n    if (segment.value === this.removeDimensionSegment.value) {\n      // remove dimension: key - op - value\n      this.dimensionSegments.splice(index, 3);\n      // remove last comma\n      if (this.dimensionSegments.length > 2) {\n        this.dimensionSegments.splice(Math.max(index - 1, 0), 1);\n      }\n    } else if (segment.type === 'plus-button') {\n      if (index > 2) {\n        // add comma in front of plus button\n        this.dimensionSegments.splice(index, 0, this.uiSegmentSrv.newCondition(','))\n      }\n      // replace plus button with key segment\n      segment.type = 'key';\n      segment.cssClass = 'query-segment-key';\n      this.dimensionSegments.push(this.getDimensionOperatorSegment());\n      this.dimensionSegments.push(this.getSelectDimensionValueSegment());\n    } else if (segment.type === 'key') {\n      this.getDimensionsCache().then(cache => {\n        //update value to be part of the available options\n        const value = this.dimensionSegments[index + 2].value;\n        const options = cache[segment.value] || [];\n        if (!this.datasource.isVariable(value) && options.indexOf(value) < 0) {\n          this.dimensionSegments[index + 2] = this.getSelectDimensionValueSegment();\n        }\n\n        this.updateQueryWithDimensions();\n      });\n    }\n\n    // add plus button at the end\n    if (this.dimensionSegments.length === 0 || this.dimensionSegments[this.dimensionSegments.length - 1].type !== 'plus-button') {\n      this.dimensionSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n\n    this.updateQueryWithDimensions();\n  }\n\n  /**\n   * Collect data from  dimension segments to pass to query\n   */\n  updateQueryWithDimensions() {\n    const dimensions = [];\n    let index;\n\n    this.dimensionSegments.forEach(s => {\n      if (s.type === 'key') {\n        if (dimensions.length === 0) {\n          dimensions.push({});\n          index = 0;\n        }\n        dimensions[index].key = s.value;\n      } else if (s.type === 'value') {\n        dimensions[index].value = s.value;\n      } else if (s.type === 'condition') {\n        dimensions.push({});\n        index++;\n      } else if (s.type === 'operator') {\n        dimensions[index].operator = s.value;\n      }\n    });\n\n    this.target.dimensions = dimensions;\n    this.panelCtrl.refresh();\n  }\n}\n\nOCIDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html'\n"]}