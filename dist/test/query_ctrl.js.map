{"version":3,"sources":["../../src/query_ctrl.js"],"names":["SELECT_PLACEHOLDERS","DIMENSION_KEY","DIMENSION_VALUE","COMPARTMENT","REGION","NAMESPACE","RESOURCEGROUP","METRIC","WINDOW","OCIDatasourceQueryCtrl","$scope","$injector","$q","uiSegmentSrv","q","target","region","compartment","namespace","resourcegroup","metric","resolution","AUTO","window","aggregation","dimensions","dimensionSegments","removeDimensionSegment","newSegment","fake","value","getSelectDimensionKeySegment","type","getDimensionOperatorSegment","newOperator","getSelectDimensionValueSegment","dimensionsCache","i","length","dim","push","newCondition","key","operator","newPlusButton","datasource","getRegions","then","appendVariables","regions","regionsQueryRegex","getCompartments","compartments","compartmentsQueryRegex","getNamespaces","namespaces","namespacesQueryRegex","getResourceGroups","resourcegroups","resourcegroupsQueryRegex","metricFindQuery","metrics","metricsQueryRegex","getAggregations","aggs","map","val","text","appendWindowsAndResolutionVariables","windows","windowsAndResolutionRegex","resolutions","segment","index","getDimensionsCache","keys","Object","cache","vars","getVariables","dimensionKeysQueryRegex","keysWithVariables","concat","segments","unshift","keySegment","getVariableValue","options","dimensionValuesQueryRegex","optionsWithVariables","v","when","targetSelector","JSON","stringify","getDimensions","reduce","data","item","values","split","varQeueryRegex","forEach","rawQuery","panelCtrl","refresh","splice","Math","max","cssClass","isVariable","indexOf","updateQueryWithDimensions","s","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAIA;;AACA;;AACA;;;;;;;;+eANA;;;;;;AAkBO,IAAMA,oDAAsB;AACjCC,iBAAe,kBADkB;AAEjCC,mBAAiB,cAFgB;AAGjCC,eAAa,oBAHoB;AAIjCC,UAAQ,eAJyB;AAKjCC,aAAW,kBALsB;AAMjCC,iBAAe,uBANkB;AAOjCC,UAAQ,eAPyB;AAQjCC,UAAQ;AARyB,CAA5B;;IAWMC,sB,WAAAA,sB;;;AACX,kCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,EAA/B,EAAmCC,YAAnC,EAAiD;AAAA;;AAAA,gJACzCH,MADyC,EACjCC,SADiC;;AAG/C,UAAKG,CAAL,GAASF,EAAT;AACA,UAAKC,YAAL,GAAoBA,YAApB;;AAEA,UAAKE,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsBhB,oBAAoBI,MAA/D;AACA,UAAKW,MAAL,CAAYE,WAAZ,GAA0B,MAAKF,MAAL,CAAYE,WAAZ,IAA2BjB,oBAAoBG,WAAzE;AACA,UAAKY,MAAL,CAAYG,SAAZ,GAAwB,MAAKH,MAAL,CAAYG,SAAZ,IAAyBlB,oBAAoBK,SAArE;AACA,UAAKU,MAAL,CAAYI,aAAZ,GAA4B,MAAKJ,MAAL,CAAYI,aAAZ,IAA6BnB,oBAAoBM,aAA7E;AACA,UAAKS,MAAL,CAAYK,MAAZ,GAAqB,MAAKL,MAAL,CAAYK,MAAZ,IAAsBpB,oBAAoBO,MAA/D;AACA,UAAKQ,MAAL,CAAYM,UAAZ,GAAyB,MAAKN,MAAL,CAAYM,UAAZ,IAA0BC,eAAnD;AACA,UAAKP,MAAL,CAAYQ,MAAZ,GAAqB,MAAKR,MAAL,CAAYQ,MAAZ,IAAsBD,eAA3C;AACA,UAAKP,MAAL,CAAYS,WAAZ,GAA0B,MAAKT,MAAL,CAAYS,WAAZ,IAA2B,QAArD;AACA,UAAKT,MAAL,CAAYU,UAAZ,GAAyB,MAAKV,MAAL,CAAYU,UAAZ,IAA0B,EAAnD;;AAEA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,sBAAL,GAA8Bd,aAAae,UAAb,CAAwB,EAAEC,MAAM,IAAR,EAAcC,OAAO,wBAArB,EAAxB,CAA9B;AACA,UAAKC,4BAAL,GAAoC;AAAA,aAAMlB,aAAae,UAAb,CAAwB,EAAEE,OAAO9B,oBAAoBC,aAA7B,EAA4C+B,MAAM,KAAlD,EAAxB,CAAN;AAAA,KAApC;AACA,UAAKC,2BAAL,GAAmC;AAAA,aAAM,MAAKpB,YAAL,CAAkBqB,WAAlB,CAA8B,GAA9B,CAAN;AAAA,KAAnC;AACA,UAAKC,8BAAL,GAAsC;AAAA,aAAMtB,aAAae,UAAb,CAAwB,EAAEE,OAAO9B,oBAAoBE,eAA7B,EAA8C8B,MAAM,OAApD,EAAxB,CAAN;AAAA,KAAtC;;AAEA,UAAKI,eAAL,GAAuB,EAAvB;;AAEA;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,MAAKtB,MAAL,CAAYU,UAAZ,CAAuBa,MAA3C,EAAmDD,GAAnD,EAAwD;AACtD,UAAME,MAAM,MAAKxB,MAAL,CAAYU,UAAZ,CAAuBY,CAAvB,CAAZ;AACA,UAAIA,IAAI,CAAR,EAAW;AACT,cAAKX,iBAAL,CAAuBc,IAAvB,CAA4B,MAAK3B,YAAL,CAAkB4B,YAAlB,CAA+B,GAA/B,CAA5B;AACD;AACD,YAAKf,iBAAL,CAAuBc,IAAvB,CAA4B,MAAK3B,YAAL,CAAkBe,UAAlB,CAA6B,EAAEE,OAAOS,IAAIG,GAAb,EAAkBV,MAAM,KAAxB,EAA7B,CAA5B;AACA,YAAKN,iBAAL,CAAuBc,IAAvB,CAA4B,MAAK3B,YAAL,CAAkBe,UAAlB,CAA6B,EAAEE,OAAOS,IAAII,QAAb,EAAuBX,MAAM,UAA7B,EAA7B,CAA5B;AACA,YAAKN,iBAAL,CAAuBc,IAAvB,CAA4B,MAAK3B,YAAL,CAAkBe,UAAlB,CAA6B,EAAEE,OAAOS,IAAIT,KAAb,EAAoBE,MAAM,OAA1B,EAA7B,CAA5B;AACD;AACD,UAAKN,iBAAL,CAAuBc,IAAvB,CAA4B,MAAK3B,YAAL,CAAkB+B,aAAlB,EAA5B;AAlC+C;AAmChD;;AAED;;;;iCAEa;AAAA;;AACX,aAAO,KAAKC,UAAL,CAAgBC,UAAhB,GAA6BC,IAA7B,CAAkC,mBAAW;AAClD,eAAO,OAAKC,eAAL,8BAA0BC,OAA1B,IAAoCC,4BAApC,CAAP;AACD,OAFM,CAAP;AAGD;;;sCAEiB;AAAA;;AAChB,aAAO,KAAKL,UAAL,CAAgBM,eAAhB,GAAkCJ,IAAlC,CAAuC,wBAAgB;AAC5D,eAAO,OAAKC,eAAL,8BAAyBI,YAAzB,IAAwCC,iCAAxC,CAAP;AACD,OAFM,CAAP;AAGD;;;oCAEe;AAAA;;AACd,aAAO,KAAKR,UAAL,CAAgBS,aAAhB,CAA8B,KAAKvC,MAAnC,EAA2CgC,IAA3C,CAAgD,sBAAc;AACnE,eAAO,OAAKC,eAAL,8BAAyBO,UAAzB,IAAsCC,+BAAtC,CAAP;AACD,OAFM,CAAP;AAGD;;;wCAEmB;AAAA;;AAClB,aAAO,KAAKX,UAAL,CAAgBY,iBAAhB,CAAkC,KAAK1C,MAAvC,EAA+CgC,IAA/C,CAAoD,0BAAkB;AAC3E,eAAO,OAAKC,eAAL,8BAAyBU,cAAzB,IAA0CC,mCAA1C,CAAP;AACD,OAFM,CAAP;AAGD;;;iCAEY;AAAA;;AACX,aAAO,KAAKd,UAAL,CAAgBe,eAAhB,CAAgC,KAAK7C,MAArC,EAA6CgC,IAA7C,CAAkD,mBAAW;AAClE,eAAO,OAAKC,eAAL,8BAAyBa,OAAzB,IAAmCC,4BAAnC,CAAP;AACD,OAFM,CAAP;AAGD;;;sCAEiB;AAChB,aAAO,KAAKjB,UAAL,CAAgBkB,eAAhB,GAAkChB,IAAlC,CAAuC,gBAAQ;AACpD,eAAOiB,KAAKC,GAAL,CAAS,UAACC,GAAD;AAAA,iBAAU,EAAEC,MAAMD,GAAR,EAAapC,OAAOoC,GAApB,EAAV;AAAA,SAAT,CAAP;AACD,OAFM,CAAP;AAGD;;;iCAEa;AACZ,aAAO,KAAKE,mCAAL,8BAA6CC,kBAA7C,IAAuDC,oCAAvD,CAAP;AACD;;;qCAEiB;AAChB,aAAO,KAAKF,mCAAL,8BAA6CG,sBAA7C,IAA2DD,oCAA3D,CAAP;AACD;;AAED;;;;;;;;wCAKoBE,O,EAASC,K,EAAO;AAAA;;AAClC,UAAID,QAAQxC,IAAR,KAAiB,KAAjB,IAA0BwC,QAAQxC,IAAR,KAAiB,aAA/C,EAA8D;AAC5D,eAAO,KAAK0C,kBAAL,GAA0B3B,IAA1B,CAA+B,iBAAS;AAC7C,cAAM4B,OAAOC,OAAOD,IAAP,CAAYE,KAAZ,CAAb;AACA,cAAMC,OAAO,OAAKjC,UAAL,CAAgBkC,YAAhB,CAA6BC,kCAA7B,KAAyD,EAAtE;AACA,cAAMC,oBAAoBH,KAAKI,MAAL,CAAYP,IAAZ,CAA1B;AACA,cAAMQ,WAAWF,kBAAkBhB,GAAlB,CAAsB;AAAA,mBAAO,OAAKpD,YAAL,CAAkBe,UAAlB,CAA6B,EAAEE,OAAOY,GAAT,EAA7B,CAAP;AAAA,WAAtB,CAAjB;AACAyC,mBAASC,OAAT,CAAiB,OAAKzD,sBAAtB;AACA,iBAAOwD,QAAP;AACD,SAPM,CAAP;AAQD;;AAED,UAAIX,QAAQxC,IAAR,KAAiB,OAArB,EAA8B;AAC5B,eAAO,KAAK0C,kBAAL,GAA0B3B,IAA1B,CAA+B,iBAAS;AAC7C,cAAMsC,aAAa,OAAK3D,iBAAL,CAAuB+C,QAAQ,CAA/B,CAAnB;AACA,cAAM/B,MAAM,OAAKG,UAAL,CAAgByC,gBAAhB,CAAiCD,WAAWvD,KAA5C,CAAZ;AACA,cAAMyD,UAAUV,MAAMnC,GAAN,KAAc,EAA9B;;AAEA;AACA,cAAMoC,OAAO,OAAKjC,UAAL,CAAgBkC,YAAhB,CAA6BS,oCAA7B,KAA2D,EAAxE;AACA,cAAMC,uBAAuBX,KAAKI,MAAL,CAAYK,OAAZ,CAA7B;AACA,cAAMJ,WAAWM,qBAAqBxB,GAArB,CAAyB;AAAA,mBAAK,OAAKpD,YAAL,CAAkBe,UAAlB,CAA6B,EAAEE,OAAO4D,CAAT,EAA7B,CAAL;AAAA,WAAzB,CAAjB;AACA,iBAAOP,QAAP;AACD,SAVM,CAAP;AAWD;;AAED,aAAO,KAAKrE,CAAL,CAAO6E,IAAP,CAAY,EAAZ,CAAP;AACD;;;yCAEoB;AAAA;;AACnB,UAAMC,iBAAiBC,KAAKC,SAAL,CAAe;AACpC9E,gBAAQ,KAAK6B,UAAL,CAAgByC,gBAAhB,CAAiC,KAAKvE,MAAL,CAAYC,MAA7C,CAD4B;AAEpCC,qBAAa,KAAK4B,UAAL,CAAgByC,gBAAhB,CAAiC,KAAKvE,MAAL,CAAYE,WAA7C,CAFuB;AAGpCC,mBAAW,KAAK2B,UAAL,CAAgByC,gBAAhB,CAAiC,KAAKvE,MAAL,CAAYG,SAA7C,CAHyB;AAIpCC,uBAAe,KAAK0B,UAAL,CAAgByC,gBAAhB,CAAiC,KAAKvE,MAAL,CAAYI,aAA7C,CAJqB;AAKpCC,gBAAQ,KAAKyB,UAAL,CAAgByC,gBAAhB,CAAiC,KAAKvE,MAAL,CAAYK,MAA7C;AAL4B,OAAf,CAAvB;;AAQA,UAAI,KAAKgB,eAAL,CAAqBwD,cAArB,CAAJ,EAA0C;AACxC,eAAO,KAAK9E,CAAL,CAAO6E,IAAP,CAAY,KAAKvD,eAAL,CAAqBwD,cAArB,CAAZ,CAAP;AACD;;AAED,aAAO,KAAK/C,UAAL,CAAgBkD,aAAhB,CAA8B,KAAKhF,MAAnC,EAA2CgC,IAA3C,CAAgD,sBAAc;AACnE,YAAM8B,QAAQpD,WAAWuE,MAAX,CAAkB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9C,cAAMC,SAASD,KAAKpE,KAAL,CAAWsE,KAAX,CAAiB,GAAjB,KAAyB,EAAxC;AACA,cAAM1D,MAAMyD,OAAO,CAAP,KAAaD,KAAKpE,KAA9B;AACA,cAAMA,QAAQqE,OAAO,CAAP,CAAd;;AAEA,cAAI,CAACF,KAAKvD,GAAL,CAAL,EAAgB;AACduD,iBAAKvD,GAAL,IAAY,EAAZ;AACD;AACDuD,eAAKvD,GAAL,EAAUF,IAAV,CAAeV,KAAf;AACA,iBAAOmE,IAAP;AACD,SAVa,EAUX,EAVW,CAAd;AAWA,eAAK7D,eAAL,CAAqBwD,cAArB,IAAuCf,KAAvC;AACA,eAAO,OAAKzC,eAAL,CAAqBwD,cAArB,CAAP;AACD,OAdM,CAAP;AAeD;;;oCAEeL,O,EAASc,c,EAAgB;AACvC,UAAMvB,OAAO,KAAKjC,UAAL,CAAgBkC,YAAhB,CAA6BsB,cAA7B,KAAgD,EAA7D;AACAvB,WAAKwB,OAAL,CAAa,iBAAS;AACpBf,gBAAQH,OAAR,CAAgB,EAAEtD,YAAF,EAASqC,MAAMrC,KAAf,EAAhB;AACD,OAFD;AAGA,aAAOyD,OAAP;AACD;;;wDAEoCA,O,EAASc,c,EAAgB;AAC5D,UAAMvB,OAAO,KAAKjC,UAAL,CAAgBkC,YAAhB,CAA6BsB,cAA7B,KAAgD,EAA7D;AACA,aAAO,6BAAId,OAAJ,sBAAgBT,IAAhB,GAAsBb,GAAtB,CAA0B;AAAA,eAAU,EAAEnC,YAAF,EAASqC,MAAMrC,KAAf,EAAV;AAAA,OAA1B,CAAP;AACD;AACD;;;;uCAEmB;AACjB,WAAKf,MAAL,CAAYwF,QAAZ,GAAuB,CAAC,KAAKxF,MAAL,CAAYwF,QAApC;AACD;;;uCAEkB;AACjB,WAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;AAED;;;;;;;;uCAKmBjC,O,EAASC,K,EAAO;AAAA;;AACjC,UAAID,QAAQ1C,KAAR,KAAkB,KAAKH,sBAAL,CAA4BG,KAAlD,EAAyD;AACvD;AACA,aAAKJ,iBAAL,CAAuBgF,MAAvB,CAA8BjC,KAA9B,EAAqC,CAArC;AACA;AACA,YAAI,KAAK/C,iBAAL,CAAuBY,MAAvB,GAAgC,CAApC,EAAuC;AACrC,eAAKZ,iBAAL,CAAuBgF,MAAvB,CAA8BC,KAAKC,GAAL,CAASnC,QAAQ,CAAjB,EAAoB,CAApB,CAA9B,EAAsD,CAAtD;AACD;AACF,OAPD,MAOO,IAAID,QAAQxC,IAAR,KAAiB,aAArB,EAAoC;AACzC,YAAIyC,QAAQ,CAAZ,EAAe;AACb;AACA,eAAK/C,iBAAL,CAAuBgF,MAAvB,CAA8BjC,KAA9B,EAAqC,CAArC,EAAwC,KAAK5D,YAAL,CAAkB4B,YAAlB,CAA+B,GAA/B,CAAxC;AACD;AACD;AACA+B,gBAAQxC,IAAR,GAAe,KAAf;AACAwC,gBAAQqC,QAAR,GAAmB,mBAAnB;AACA,aAAKnF,iBAAL,CAAuBc,IAAvB,CAA4B,KAAKP,2BAAL,EAA5B;AACA,aAAKP,iBAAL,CAAuBc,IAAvB,CAA4B,KAAKL,8BAAL,EAA5B;AACD,OAVM,MAUA,IAAIqC,QAAQxC,IAAR,KAAiB,KAArB,EAA4B;AACjC,aAAK0C,kBAAL,GAA0B3B,IAA1B,CAA+B,iBAAS;AACtC;AACA,cAAMjB,QAAQ,OAAKJ,iBAAL,CAAuB+C,QAAQ,CAA/B,EAAkC3C,KAAhD;AACA,cAAMyD,UAAUV,MAAML,QAAQ1C,KAAd,KAAwB,EAAxC;AACA,cAAI,CAAC,OAAKe,UAAL,CAAgBiE,UAAhB,CAA2BhF,KAA3B,CAAD,IAAsCyD,QAAQwB,OAAR,CAAgBjF,KAAhB,IAAyB,CAAnE,EAAsE;AACpE,mBAAKJ,iBAAL,CAAuB+C,QAAQ,CAA/B,IAAoC,OAAKtC,8BAAL,EAApC;AACD;;AAED,iBAAK6E,yBAAL;AACD,SATD;AAUD;;AAED;AACA,UAAI,KAAKtF,iBAAL,CAAuBY,MAAvB,KAAkC,CAAlC,IAAuC,KAAKZ,iBAAL,CAAuB,KAAKA,iBAAL,CAAuBY,MAAvB,GAAgC,CAAvD,EAA0DN,IAA1D,KAAmE,aAA9G,EAA6H;AAC3H,aAAKN,iBAAL,CAAuBc,IAAvB,CAA4B,KAAK3B,YAAL,CAAkB+B,aAAlB,EAA5B;AACD;;AAED,WAAKoE,yBAAL;AACD;;AAED;;;;;;gDAG4B;AAC1B,UAAMvF,aAAa,EAAnB;AACA,UAAIgD,cAAJ;;AAEA,WAAK/C,iBAAL,CAAuB4E,OAAvB,CAA+B,aAAK;AAClC,YAAIW,EAAEjF,IAAF,KAAW,KAAf,EAAsB;AACpB,cAAIP,WAAWa,MAAX,KAAsB,CAA1B,EAA6B;AAC3Bb,uBAAWe,IAAX,CAAgB,EAAhB;AACAiC,oBAAQ,CAAR;AACD;AACDhD,qBAAWgD,KAAX,EAAkB/B,GAAlB,GAAwBuE,EAAEnF,KAA1B;AACD,SAND,MAMO,IAAImF,EAAEjF,IAAF,KAAW,OAAf,EAAwB;AAC7BP,qBAAWgD,KAAX,EAAkB3C,KAAlB,GAA0BmF,EAAEnF,KAA5B;AACD,SAFM,MAEA,IAAImF,EAAEjF,IAAF,KAAW,WAAf,EAA4B;AACjCP,qBAAWe,IAAX,CAAgB,EAAhB;AACAiC;AACD,SAHM,MAGA,IAAIwC,EAAEjF,IAAF,KAAW,UAAf,EAA2B;AAChCP,qBAAWgD,KAAX,EAAkB9B,QAAlB,GAA6BsE,EAAEnF,KAA/B;AACD;AACF,OAfD;;AAiBA,WAAKf,MAAL,CAAYU,UAAZ,GAAyBA,UAAzB;AACA,WAAK+E,SAAL,CAAeC,OAAf;AACD;;;;EAhPyCS,c;;AAmP5CzG,uBAAuB0G,WAAvB,GAAqC,4BAArC","file":"query_ctrl.js","sourcesContent":["/*\n** Copyright © 2019 Oracle and/or its affiliates. All rights reserved.\n** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n*/\nimport { QueryCtrl } from 'app/plugins/sdk'\nimport './css/query-editor.css!'\nimport {\n  windows,\n  namespacesQueryRegex,\n  resourcegroupsQueryRegex,\n  metricsQueryRegex,\n  regionsQueryRegex,\n  compartmentsQueryRegex,\n  dimensionKeysQueryRegex,\n  dimensionValuesQueryRegex,\n  windowsAndResolutionRegex, resolutions, AUTO\n} from './constants'\n\nexport const SELECT_PLACEHOLDERS = {\n  DIMENSION_KEY: 'select dimension',\n  DIMENSION_VALUE: 'select value',\n  COMPARTMENT: 'select compartment',\n  REGION: 'select region',\n  NAMESPACE: 'select namespace',\n  RESOURCEGROUP: 'select resource group',\n  METRIC: 'select metric',\n  WINDOW: 'select window'\n}\n\nexport class OCIDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector, $q, uiSegmentSrv) {\n    super($scope, $injector)\n\n    this.q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.target.region = this.target.region || SELECT_PLACEHOLDERS.REGION;\n    this.target.compartment = this.target.compartment || SELECT_PLACEHOLDERS.COMPARTMENT;\n    this.target.namespace = this.target.namespace || SELECT_PLACEHOLDERS.NAMESPACE;\n    this.target.resourcegroup = this.target.resourcegroup || SELECT_PLACEHOLDERS.RESOURCEGROUP;\n    this.target.metric = this.target.metric || SELECT_PLACEHOLDERS.METRIC;\n    this.target.resolution = this.target.resolution || AUTO;\n    this.target.window = this.target.window || AUTO;\n    this.target.aggregation = this.target.aggregation || 'mean()'\n    this.target.dimensions = this.target.dimensions || [];\n\n    this.dimensionSegments = [];\n    this.removeDimensionSegment = uiSegmentSrv.newSegment({ fake: true, value: '-- remove dimension --' });\n    this.getSelectDimensionKeySegment = () => uiSegmentSrv.newSegment({ value: SELECT_PLACEHOLDERS.DIMENSION_KEY, type: 'key' });\n    this.getDimensionOperatorSegment = () => this.uiSegmentSrv.newOperator('=');\n    this.getSelectDimensionValueSegment = () => uiSegmentSrv.newSegment({ value: SELECT_PLACEHOLDERS.DIMENSION_VALUE, type: 'value' });\n\n    this.dimensionsCache = {};\n\n    // rebuild dimensionSegments on query editor load\n    for (let i = 0; i < this.target.dimensions.length; i++) {\n      const dim = this.target.dimensions[i];\n      if (i > 0) {\n        this.dimensionSegments.push(this.uiSegmentSrv.newCondition(','))\n      }\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.key, type: 'key' }));\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.operator, type: 'operator' }));\n      this.dimensionSegments.push(this.uiSegmentSrv.newSegment({ value: dim.value, type: 'value' }));\n    }\n    this.dimensionSegments.push(this.uiSegmentSrv.newPlusButton())\n  }\n\n  // ****************************** Options **********************************\n\n  getRegions() {\n    return this.datasource.getRegions().then(regions => {\n      return this.appendVariables([ ...regions], regionsQueryRegex);\n    });\n  }\n\n  getCompartments() {\n    return this.datasource.getCompartments().then(compartments => {\n      return this.appendVariables([...compartments], compartmentsQueryRegex);\n    });\n  }\n\n  getNamespaces() {\n    return this.datasource.getNamespaces(this.target).then(namespaces => {\n      return this.appendVariables([...namespaces], namespacesQueryRegex);\n    });\n  }\n\n  getResourceGroups() {\n    return this.datasource.getResourceGroups(this.target).then(resourcegroups => {\n      return this.appendVariables([...resourcegroups], resourcegroupsQueryRegex);\n    });\n  }\n\n  getMetrics() {\n    return this.datasource.metricFindQuery(this.target).then(metrics => {\n      return this.appendVariables([...metrics], metricsQueryRegex);\n    });\n  }\n\n  getAggregations() {\n    return this.datasource.getAggregations().then(aggs => {\n      return aggs.map((val) => ({ text: val, value: val }));\n    });\n  }\n\n  getWindows () {\n    return this.appendWindowsAndResolutionVariables([...windows], windowsAndResolutionRegex)\n  }\n\n  getResolutions () {\n    return this.appendWindowsAndResolutionVariables([...resolutions], windowsAndResolutionRegex)\n  }\n\n  /**\n   * Get options for the dimension segment: of type 'key' or type 'value'\n   * @param segment \n   * @param index \n   */\n  getDimensionOptions(segment, index) {\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      return this.getDimensionsCache().then(cache => {\n        const keys = Object.keys(cache);\n        const vars = this.datasource.getVariables(dimensionKeysQueryRegex) || [];\n        const keysWithVariables = vars.concat(keys);\n        const segments = keysWithVariables.map(key => this.uiSegmentSrv.newSegment({ value: key }));\n        segments.unshift(this.removeDimensionSegment);\n        return segments;\n      });\n    }\n\n    if (segment.type === 'value') {\n      return this.getDimensionsCache().then(cache => {\n        const keySegment = this.dimensionSegments[index - 2];\n        const key = this.datasource.getVariableValue(keySegment.value);\n        const options = cache[key] || [];\n\n        // return all the values for the key\n        const vars = this.datasource.getVariables(dimensionValuesQueryRegex) || [];\n        const optionsWithVariables = vars.concat(options);\n        const segments = optionsWithVariables.map(v => this.uiSegmentSrv.newSegment({ value: v }));\n        return segments;\n      });\n    }\n\n    return this.q.when([]);\n  }\n\n  getDimensionsCache() {\n    const targetSelector = JSON.stringify({\n      region: this.datasource.getVariableValue(this.target.region),\n      compartment: this.datasource.getVariableValue(this.target.compartment),\n      namespace: this.datasource.getVariableValue(this.target.namespace),\n      resourcegroup: this.datasource.getVariableValue(this.target.resourcegroup),\n      metric: this.datasource.getVariableValue(this.target.metric)\n    });\n\n    if (this.dimensionsCache[targetSelector]) {\n      return this.q.when(this.dimensionsCache[targetSelector]);\n    }\n\n    return this.datasource.getDimensions(this.target).then(dimensions => {\n      const cache = dimensions.reduce((data, item) => {\n        const values = item.value.split('=') || [];\n        const key = values[0] || item.value;\n        const value = values[1];\n\n        if (!data[key]) {\n          data[key] = []\n        }\n        data[key].push(value);\n        return data;\n      }, {});\n      this.dimensionsCache[targetSelector] = cache;\n      return this.dimensionsCache[targetSelector];\n    })\n  }\n\n  appendVariables(options, varQeueryRegex) {\n    const vars = this.datasource.getVariables(varQeueryRegex) || [];\n    vars.forEach(value => {\n      options.unshift({ value, text: value });\n    });\n    return options;\n  }\n\n  appendWindowsAndResolutionVariables (options, varQeueryRegex) {\n    const vars = this.datasource.getVariables(varQeueryRegex) || []\n    return [...options, ...vars].map(value => ({ value, text: value }))\n  }\n  // ****************************** Callbacks **********************************\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  /**\n   * On dimension segment change callback\n   * @param segment \n   * @param index \n   */\n  onDimensionsChange(segment, index) {\n    if (segment.value === this.removeDimensionSegment.value) {\n      // remove dimension: key - op - value\n      this.dimensionSegments.splice(index, 3);\n      // remove last comma\n      if (this.dimensionSegments.length > 2) {\n        this.dimensionSegments.splice(Math.max(index - 1, 0), 1);\n      }\n    } else if (segment.type === 'plus-button') {\n      if (index > 2) {\n        // add comma in front of plus button\n        this.dimensionSegments.splice(index, 0, this.uiSegmentSrv.newCondition(','))\n      }\n      // replace plus button with key segment\n      segment.type = 'key';\n      segment.cssClass = 'query-segment-key';\n      this.dimensionSegments.push(this.getDimensionOperatorSegment());\n      this.dimensionSegments.push(this.getSelectDimensionValueSegment());\n    } else if (segment.type === 'key') {\n      this.getDimensionsCache().then(cache => {\n        //update value to be part of the available options\n        const value = this.dimensionSegments[index + 2].value;\n        const options = cache[segment.value] || [];\n        if (!this.datasource.isVariable(value) && options.indexOf(value) < 0) {\n          this.dimensionSegments[index + 2] = this.getSelectDimensionValueSegment();\n        }\n\n        this.updateQueryWithDimensions();\n      });\n    }\n\n    // add plus button at the end\n    if (this.dimensionSegments.length === 0 || this.dimensionSegments[this.dimensionSegments.length - 1].type !== 'plus-button') {\n      this.dimensionSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n\n    this.updateQueryWithDimensions();\n  }\n\n  /**\n   * Collect data from  dimension segments to pass to query\n   */\n  updateQueryWithDimensions() {\n    const dimensions = [];\n    let index;\n\n    this.dimensionSegments.forEach(s => {\n      if (s.type === 'key') {\n        if (dimensions.length === 0) {\n          dimensions.push({});\n          index = 0;\n        }\n        dimensions[index].key = s.value;\n      } else if (s.type === 'value') {\n        dimensions[index].value = s.value;\n      } else if (s.type === 'condition') {\n        dimensions.push({});\n        index++;\n      } else if (s.type === 'operator') {\n        dimensions[index].operator = s.value;\n      }\n    });\n\n    this.target.dimensions = dimensions;\n    this.panelCtrl.refresh();\n  }\n}\n\nOCIDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html'\n"]}