{"version":3,"sources":["../../src/util/retry.js"],"names":["retryOrThrow","actionPromise","maxRetries","numberOfRetries","Promise","resolve","reject","action","then","response","catch","error","Error","JSON","stringify","delay","Math","pow","floor","random","setTimeout"],"mappings":";;;;;AAIe,WAASA,YAAT,CAAuBC,aAAvB,EAAsCC,UAAtC,EAAkD;AAC/D,QAAIC,kBAAkB,CAAtB;AACA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC;AACA,eAASA,MAAT,GAAmB;AACjBN,wBACGO,IADH,CACQ,UAACC,QAAD,EAAc;AAClBJ,kBAAQI,QAAR;AACD,SAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChB,cAAIR,mBAAmBD,UAAvB,EAAmC;AACjC,mBAAOI,OAAO,IAAIM,KAAJ,wCAA+CC,KAAKC,SAAL,CAAeH,KAAf,CAA/C,CAAP,CAAP;AACD;AACD,cAAII,QAAQC,KAAKC,GAAL,CAAS,CAAT,EAAYd,eAAZ,IAA+Ba,KAAKE,KAAL,CAAWF,KAAKG,MAAL,KAAgB,IAA3B,CAA3C;AACAhB;AACAiB,qBAAW;AAAA,mBAAMb,QAAN;AAAA,WAAX,EAA2BQ,KAA3B;AACD,SAXH;AAYD;AACF,KAhBM,CAAP;AAiBD;;qBAnBuBf,Y","file":"retry.js","sourcesContent":["/*\n** Copyright Â© 2019 Oracle and/or its affiliates. All rights reserved.\n** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n*/\nexport default function retryOrThrow (actionPromise, maxRetries) {\n  let numberOfRetries = 1\n  return new Promise((resolve, reject) => {\n    action()\n    function action () {\n      actionPromise()\n        .then((response) => {\n          resolve(response)\n        })\n        .catch((error) => {\n          if (numberOfRetries >= maxRetries) {\n            return reject(new Error(`reject: too many failed attempts: ${JSON.stringify(error)}`))\n          }\n          let delay = Math.pow(2, numberOfRetries) + Math.floor(Math.random() * 1000)\n          numberOfRetries++\n          setTimeout(() => action(), delay)\n        })\n    }\n  })\n}\n"]}